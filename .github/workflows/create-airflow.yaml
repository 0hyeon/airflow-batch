name: create-airflow

on: push

jobs:
  oncreated:
    if: ${{ github.event.created == true }}
    runs-on: [airflow]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          repository: 0hyeon/airflow-batch
          path: airflow
          ref: ${{ github.ref }}

      - name: install kubectl, helm
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
          curl -LO "https://get.helm.sh/helm-v3.3.0-linux-amd64.tar.gz" && tar -zxvf helm-v3.3.0-linux-amd64.tar.gz && chmod +x linux-amd64/helm && mv linux-amd64/helm /usr/local/bin/helm

      - name: get ref name
        run: |
          REF_NAME=${GITHUB_REF##*/}
          echo running on branch ${REF_NAME}
          echo "REF_NAME=${REF_NAME}" >> $GITHUB_ENV

      - name: create pg db
        run: |
          cd airflow/lecture_2

          cat job/db-create.yaml | sed -r "s:BRANCH:${REF_NAME}:g" | kubectl apply -f -

      # - name: sync dags
      #   run: |
      #     mkdir -p /data/airflow/airflow-${REF_NAME}/dags
      #     mkdir -p /data/airflow/airflow-${REF_NAME}/logs

      #     mv airflow/lecture_2/dags/* /data/airflow/airflow-${REF_NAME}/dags/

      #     chmod -R 777 /data/airflow/airflow-${REF_NAME}
      - name: sync dags
        run: |
          mkdir -p /data/airflow/airflow/dags
          mkdir -p /data/airflow/airflow/logs
          rsync -av --delete airflow/lecture_2/dags/ /data/airflow/airflow/dags/
          rsync -av --delete airflow/lecture_2/dags/ /data/airflow/airflow-${REF_NAME}/dags/
          chmod -R 777 /data/airflow/airflow

      - name: create airflow
        run: |
          cd airflow
          echo "Using REF_NAME=${{ env.REF_NAME }}"
          helm upgrade --install airflow-${{ env.REF_NAME }} ./ \
            --set appName=${{ env.REF_NAME }}

      - name: show airflow ip
        run: |
          sleep 10
          kubectl describe svc airflow-${REF_NAME} | grep "LoadBalancer Ingress"

  onpushed:
    if: ${{ github.event.created == false }}
    runs-on: [airflow]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          repository: 0hyeon/airflow-batch
          path: airflow
          ref: ${{ github.ref }}

      - name: install kubectl, helm
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
          curl -LO "https://get.helm.sh/helm-v3.3.0-linux-amd64.tar.gz" && tar -zxvf helm-v3.3.0-linux-amd64.tar.gz && chmod +x linux-amd64/helm && mv linux-amd64/helm /usr/local/bin/helm

      - name: get ref name
        run: |
          REF_NAME=${GITHUB_REF##*/}
          echo running on branch ${REF_NAME}
          echo "REF_NAME=${REF_NAME}" >> $GITHUB_ENV

      - name: deploy NFS DaemonSet + PV
        run: |
          kubectl apply -f airflow/lecture_2/nfs/nfs-server-daemonset.yaml
          kubectl apply -f airflow/lecture_2/nfs/pv.yaml

      # - name: sync dags
      #   run: |
      #     mkdir -p /data/airflow/airflow-${REF_NAME}/dags
      #     mkdir -p /data/airflow/airflow-${REF_NAME}/logs

      #     mv airflow/lecture_2/dags/* /data/airflow/airflow-${REF_NAME}/dags/

      #     chmod -R 777 /data/airflow/airflow-${REF_NAME}
      - name: sync dags
        run: |
          mkdir -p /data/airflow/airflow-${REF_NAME}/dags
          mkdir -p /data/airflow/airflow-${REF_NAME}/logs
          rsync -av --delete airflow/lecture_2/dags/ /data/airflow/airflow-${REF_NAME}/dags/
          chmod -R 777 /data/airflow/airflow-${REF_NAME}

      - name: show airflow ip
        run: |
          kubectl describe svc airflow-${REF_NAME} | grep "LoadBalancer Ingress"

      - name: deploy airflow
        run: |
          cd airflow
          echo "Using REF_NAME=${{ env.REF_NAME }}"
          helm upgrade --install airflow-${{ env.REF_NAME }} ./ \
            --set appName=${{ env.REF_NAME }}
